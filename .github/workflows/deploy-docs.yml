name: Deploy documentation

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version this documentation is for'
        required: true

  schedule:
    # Check every 15 minutes for any updates on master and trigger a new documentation build if so
    - cron: "*/15 * * * *"

# Prevent racy conditions from breaking deployments
concurrency: deploy-docs

jobs:
  check-for-master-release:
    if: github.event_name == 'schedule'

    runs-on: ubuntu-latest

    outputs:
      should_build: ${{ steps.check.outputs.should_build }}

    steps:
      - name: Checkout hikari repository
        uses: actions/checkout@v3
        with:
          repository: hikari-py/hikari
          ref: master
          path: hikari

      - name: Checkout hikari-docs repository
        uses: actions/checkout@v3
        with:
          path: hikari-docs

      - name: Check if should build
        id: check
        run: |
          cd hikari
          latest_sha="$(git rev-parse master)"
          cd ..
          
          echo "::set-output name=should_build::$(if [ "$(cat hikari-docs/.master-docs-sha 2>/dev/null)" != "${latest_sha}" ]; then echo "yes"; fi)"

  deploy-docs:
    needs: [check-for-master-release]

    if: always() && (github.event_name != 'schedule' || needs.check-for-master-release.outputs.should_build == 'yes')

    runs-on: ubuntu-latest

    env:
      # Scheduled workflows won't have input
      VERSION: ${{ github.event.inputs.version || 'master' }}

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name: Checkout hikari repository
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          repository: hikari-py/hikari
          ref: ${{ env.VERSION }}
          path: hikari

      - name: Checkout hikari-docs repository
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          path: hikari-docs

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Setup git config
        run: |
          git config --global user.name "hikari-bot"
          git config --global user.email "90276125+hikari-bot[bot]@users.noreply.github.com"

      - name: Temporarily disable "include administrators" branch protection
        uses: benjefferies/branch-protection-bot@1.0.7
        with:
          access_token: ${{ steps.generate_token.outputs.token }}
          enforce_admins: false

      - name: Build and publish documentation
        env:
          SUPER_REPO_PATH: hikari
          DOCS_REPO_PATH: hikari-docs
        run: |
          pip install nox
          bash ${DOCS_REPO_PATH}/scripts/deploy.sh

      - name: Re-enable "include administrators" branch protection
        uses: benjefferies/branch-protection-bot@1.0.7
        if: always()
        with:
          access_token: ${{ steps.generate_token.outputs.token }}
          enforce_admins: true
